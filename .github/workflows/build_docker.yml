name: build-docker

on:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  REGISTRY_IMAGE: ghcr.io/${{ github.repository }}

jobs:
  build-programs:
    name: "Build and hash ${{ matrix.name }}"
    runs-on: "${{ matrix.runner }}"

    strategy:
      matrix:
        include:
          - name: "snos"
            runner: "ubuntu-latest-8-cores"
            script: "generate_snos.sh"
          - name: "layout_bridge"
            runner: "ubuntu-latest-16-cores"
            script: "generate_layout_bridge.sh"

    steps:
      - name: "Checkout source code"
        uses: "actions/checkout@v4"

      - name: "Build and hash program (MOCK)"
        run: |
          mkdir -p ./programs
          echo "PROGRAM" > ./programs/${{ matrix.name }}.json

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ matrix.name }}.json
          path: ./programs/${{ matrix.name }}.json

  docker-build-and-push:
    runs-on: ubuntu-20.04-4-cores
    needs: [build-programs]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download programs
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts-*.json
          path: artifacts
          merge-multiple: true

      - name: Rename and list downloaded files
        run: |
          mv artifacts programs
          ls -R programs

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}:latest,ghcr.io/${{ github.repository }}:${{ needs.prepare.outputs.tag_name }}
          platforms: linux/amd64,linux/arm64
